---
name: Main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, ready_for_review, reopened, synchronize]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup pnpm
        uses: pnpm/action-setup@d648c2dd069001a242c621c8306af467f150e99d
        with:
          run_install: false
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: pnpm
          node-version-file: package.json
      - name: Install dependencies
        run: pnpm bootstrap
      - env:
          TIMING: 1
        name: Lint
        run: pnpm lint
      - name: Run tests
        run: pnpm test

  release:
    env:
      DRY_RUN: ${{ github.ref_name != github.event.repository.default_branch }}
    name: Release
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - id: get-workflow-access-token
        name: Get Workflow Access Token
        uses: actions/create-github-app-token@d72941d797fd3113feb6b93fd0dec494b13a2547 # v1.12.0
        with:
          app-id: ${{ secrets.APPLICATION_ID }}
          private-key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
      - name: Setup Git user
        run: |
          git config --global user.email '118100583+bfra-me[bot]@users.noreply.github.com'
          git config --global user.name 'bfra-me[bot]'
      - name: Checkout `release` branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: release
          token: ${{ steps.get-workflow-access-token.outputs.token }}
      - if: ${{ github.event_name == 'pull_request' }}
        name: Fetch PR
        run: git fetch origin +${{ github.sha }}:${{ github.ref }}
      - id: merge
        name: Merge `main` into `release`
        run: |
          git merge --no-ff -Xtheirs -m 'skip: merge (${{ github.sha }}) [skip release]' ${{ github.sha }}
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Setup pnpm
        uses: pnpm/action-setup@d648c2dd069001a242c621c8306af467f150e99d
        with:
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: pnpm
          node-version-file: package.json
      - name: Install dependencies
        run: pnpm bootstrap
      - if: env.DRY_RUN != 'true'
        name: Push `release` branch
        run: git push origin release:release
      - env:
          GIT_AUTHOR_EMAIL: '118100583+bfra-me[bot]@users.noreply.github.com'
          GIT_AUTHOR_NAME: 'bfra-me[bot]'
          GIT_COMMITTER_EMAIL: '118100583+bfra-me[bot]@users.noreply.github.com'
          GIT_COMMITTER_NAME: 'bfra-me[bot]'
          GITHUB_TOKEN: ${{ steps.get-workflow-access-token.outputs.token }}
        id: semantic-release
        name: Semantic Release
        run: |
          export GITHUB_REF=refs/heads/release GITHUB_SHA=${{ steps.merge.outputs.commit }}
          pnpm semantic-release --dry-run ${{ env.DRY_RUN }} --ci ${{ env.DRY_RUN != 'true' }}
      - if: github.event_name == 'push' && env.DRY_RUN != 'true'
        run: 'git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git refs/heads/release:refs/heads/v1'
        env:
          GITHUB_TOKEN: ${{ steps.get-workflow-access-token.outputs.token }}
